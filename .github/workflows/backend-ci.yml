name: CI - Backend Build
on:
  workflow_dispatch:
  pull_request:
    branches:
        - main
    paths:
        - 'backend/**'

jobs:
    build:
        runs-on: ubuntu-latest
        environment: dev
        defaults:
            run:
              working-directory: ./backend
        services:
            postgres:
              image: postgres:16.1
              env:
                POSTGRES_USER: chamara
                POSTGRES_PASSWORD: Chathu123
                POSTGRES_DB: customer
              ports:
                - "5432:5432"
              options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5

        steps:
        - name: Post to a Slack channel
          id: slack
          uses: slackapi/slack-github-action@v1.25.0
          with:
            # Slack channel id, channel name, or user id to post message.
            # See also: https://api.slack.com/methods/chat.postMessage#channels
            channel-id: 'web-apps'
            channel-name: 'web-apps'
            # For posting a rich message using Block Kit
            payload: |
              {
                "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                    }
                  }
                ]
              }
          env:
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        - name: Checkout
          uses: actions/checkout@v2
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '21'
            distribution: 'temurin'
            cache: maven
        - name: Login to DockerHub
          run: docker login -p ${{ secrets.DOCKER_ACCESS_TOKEN }} -u ${{ secrets.REGISTRY_USERNAME }} registry-1.docker.io/v1
        - name: Build and run unit tests and integration tests and build the docker image
          run: mvn -ntp -B verify